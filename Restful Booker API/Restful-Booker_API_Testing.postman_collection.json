{
	"info": {
		"_postman_id": "2cf1a653-ae84-4387-905d-ca2957347a49",
		"name": "Restful-Booker_API_Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24458020",
		"_collection_link": "https://blue-rocket-884563.postman.co/workspace/Hands-On-Project-1~a5183b7d-b8b6-4377-ba34-11df2f28d6a7/collection/24458020-2cf1a653-ae84-4387-905d-ca2957347a49?action=share&source=collection_link&creator=24458020"
	},
	"item": [
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//First test to validate status code\r",
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"//Second test to validate status message\r",
							"pm.test('Validation of response status', function () {\r",
							"    console.log(pm.response.status);\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"//Third test to validate content-type in response headers\r",
							"pm.test('Validation of content-type in response', function () {\r",
							"    console.log(pm.request.getHeaders('content-type'));\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							"\r",
							"//Fourth test to validate token is exist in response\r",
							"pm.test(\"Validation of token generated\", function(){\r",
							"    var bodyData = pm.response.json();\r",
							"    var tokenData = bodyData.token;\r",
							"    pm.expect(tokenData).to.exist;\r",
							"});\r",
							"\r",
							"//Fifth test to validate token is not null\r",
							"pm.test('Validation of Token in response', function () {\r",
							"    var bodyData = pm.response.json();\r",
							"    var tokenValue = bodyData.token;\r",
							"    console.log(tokenValue);\r",
							"    pm.expect(tokenValue).not.to.be.null;\r",
							"    pm.expect(tokenValue).to.be.a('String');\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Booking Ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//First test to validate status code",
							"pm.test('Validation of status code 200', function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"})",
							"",
							"//Second test to validate status message",
							"pm.test('Validation of response status', function () {",
							"    pm.expect(pm.response.status).to.equal('OK');",
							"})",
							"",
							"//Third test to validate response body contains array or not",
							"pm.test('Validation of response body', function () {",
							"    var resBody = pm.response.json();",
							"    pm.expect(resBody).to.be.an('array').that.is.not.empty;",
							"})",
							"",
							"//Fourth test to validate bookid ID is number",
							"pm.test('Validation of booking ID is number', function(){",
							"    var resBody = pm.response.json();",
							"    var bookID =  resBody[0].bookingid ;",
							"    pm.expect(bookID).to.be.a('number');",
							"});",
							"",
							"//Fifth test to validate response time",
							"pm.test('Validation of response Time', function(){",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"pm.test('Validation of response status', function () {\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"pm.test('Validation of response headers', function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							"\r",
							"pm.test('Validation of Response', function () {\r",
							"    var resp = pm.response.json();\r",
							"    pm.expect(resp).to.be.an('object');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request URL', function(){\r",
							"    var req = pm.request.url.getPath() ;\r",
							"    pm.expect(req).to.be.a('String');\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/10",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"pm.test('Validation of response status', function () {\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"pm.test('Validation of response headers', function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							"\r",
							"pm.test('Validation of response body', function(){\r",
							"     var respBody = pm.response.json();\r",
							"     var fname = respBody.booking.firstname;\r",
							"     var lname = respBody.booking.lastname;\r",
							"     var addons = respBody.booking.additionalneeds;\r",
							"     var bookID = respBody.bookingid ;\r",
							"     var price = respBody.booking.totalprice ;\r",
							"     var bookDate = respBody.booking.bookingdates ;\r",
							"     var entry = respBody.booking.bookingdates.checkin ;\r",
							"     var exit = respBody.booking.bookingdates.checkout ;\r",
							"     var record = respBody.booking ;\r",
							"     var isPaid = respBody.booking.depositpaid;\r",
							"\r",
							"     pm.expect(fname).to.be.string;\r",
							"     pm.expect(lname).to.be.string;\r",
							"     pm.expect(addons).to.be.string;\r",
							"     pm.expect(bookID).to.be.a('number');\r",
							"     pm.expect(price).to.be.a('number');\r",
							"     pm.expect(record).to.be.an('object');\r",
							"     pm.expect(bookDate).to.be.an('object');\r",
							"     pm.expect(isPaid).to.be.true;\r",
							"     pm.expect(entry).to.be.equal('2024-03-24');\r",
							"     pm.expect(exit).to.be.equal('2024-04-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Ashok\",\r\n    \"lastname\" : \"Gupta\",\r\n    \"totalprice\" : 57,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2024-03-24\",\r\n        \"checkout\" : \"2024-04-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"pm.test('Validation of response status', function () {\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers', function () {\r",
							"    pm.expect(pm.request.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers_II', function(){\r",
							"    pm.expect(pm.request.headers.get('Accept')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test('Validation of response headers', function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Ryan\",\r\n    \"lastname\" : \"Potter\",\r\n    \"totalprice\" : 134,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2024-03-28\",\r\n        \"checkout\" : \"2024-04-04\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/3966",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"3966"
					]
				}
			},
			"response": []
		},
		{
			"name": "Semi update | Partial update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"pm.test('Validation of response status', function () {\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers', function () {\r",
							"    pm.expect(pm.request.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers_II', function(){\r",
							"    pm.expect(pm.request.headers.get('Accept')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test('Validation of response headers', function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Kaylie\",\r\n    \"lastname\" : \"Simps\"\r\n}"
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/2186",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"2186"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"pm.test('Validation of response status', function () {\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers', function () {\r",
							"    pm.expect(pm.request.headers.get('content-type')).to.include('application/json');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers_II', function(){\r",
							"    pm.expect(pm.request.headers.get('Accept')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test('Validation of response headers', function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/3818",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"3818"
					]
				}
			},
			"response": []
		},
		{
			"name": "Health check API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Validation of status code 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"\r",
							"pm.test('Validation of response status', function () {\r",
							"    pm.expect(pm.response.status).to.equal('OK');\r",
							"})\r",
							"\r",
							"pm.test('Validation of request headers', function () {\r",
							"    pm.expect(pm.request.headers.get('Accept')).to.include('*/*');\r",
							"})\r",
							"\r",
							"pm.test('Validation of content-type in response', function(){\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('text/plain')\r",
							"})\r",
							"\r",
							"pm.test('Validationof response', function(){\r",
							"    pm.expect(pm.response.text()).to.equal('Created');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/ping",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		}
	]
}